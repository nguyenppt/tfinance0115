#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankProject.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bisolutions_vvcb")]
	public partial class BankProjectModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBCOUNTRY(BCOUNTRY instance);
    partial void UpdateBCOUNTRY(BCOUNTRY instance);
    partial void DeleteBCOUNTRY(BCOUNTRY instance);
    partial void InsertAccountShift(AccountShift instance);
    partial void UpdateAccountShift(AccountShift instance);
    partial void DeleteAccountShift(AccountShift instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InsertAccountPeriod(AccountPeriod instance);
    partial void UpdateAccountPeriod(AccountPeriod instance);
    partial void DeleteAccountPeriod(AccountPeriod instance);
    partial void InsertSessionHistory(SessionHistory instance);
    partial void UpdateSessionHistory(SessionHistory instance);
    partial void DeleteSessionHistory(SessionHistory instance);
    #endregion
		
		public BankProjectModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["bisolutions_vvcbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BCOUNTRY> BCOUNTRies
		{
			get
			{
				return this.GetTable<BCOUNTRY>();
			}
		}
		
		public System.Data.Linq.Table<AccountShift> AccountShifts
		{
			get
			{
				return this.GetTable<AccountShift>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shifts
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<AccountPeriod> AccountPeriods
		{
			get
			{
				return this.GetTable<AccountPeriod>();
			}
		}
		
		public System.Data.Linq.Table<SessionHistory> SessionHistories
		{
			get
			{
				return this.GetTable<SessionHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BCOUNTRY")]
	public partial class BCOUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQuocGia;
		
		private string _TenTA;
		
		private string _TenTV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuocGiaChanging(string value);
    partial void OnMaQuocGiaChanged();
    partial void OnTenTAChanging(string value);
    partial void OnTenTAChanged();
    partial void OnTenTVChanging(string value);
    partial void OnTenTVChanged();
    #endregion
		
		public BCOUNTRY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuocGia", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQuocGia
		{
			get
			{
				return this._MaQuocGia;
			}
			set
			{
				if ((this._MaQuocGia != value))
				{
					this.OnMaQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaQuocGia = value;
					this.SendPropertyChanged("MaQuocGia");
					this.OnMaQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTA", DbType="NVarChar(100)")]
		public string TenTA
		{
			get
			{
				return this._TenTA;
			}
			set
			{
				if ((this._TenTA != value))
				{
					this.OnTenTAChanging(value);
					this.SendPropertyChanging();
					this._TenTA = value;
					this.SendPropertyChanged("TenTA");
					this.OnTenTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTV", DbType="NVarChar(100)")]
		public string TenTV
		{
			get
			{
				return this._TenTV;
			}
			set
			{
				if ((this._TenTV != value))
				{
					this.OnTenTVChanging(value);
					this.SendPropertyChanging();
					this._TenTV = value;
					this.SendPropertyChanged("TenTV");
					this.OnTenTVChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountShifts")]
	public partial class AccountShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountPeriodId;
		
		private int _ShiftId;
		
		private EntityRef<Shift> _Shift;
		
		private EntityRef<AccountPeriod> _AccountPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountPeriodIdChanging(int value);
    partial void OnAccountPeriodIdChanged();
    partial void OnShiftIdChanging(int value);
    partial void OnShiftIdChanged();
    #endregion
		
		public AccountShift()
		{
			this._Shift = default(EntityRef<Shift>);
			this._AccountPeriod = default(EntityRef<AccountPeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPeriodId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountPeriodId
		{
			get
			{
				return this._AccountPeriodId;
			}
			set
			{
				if ((this._AccountPeriodId != value))
				{
					if (this._AccountPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPeriodId = value;
					this.SendPropertyChanged("AccountPeriodId");
					this.OnAccountPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShiftId
		{
			get
			{
				return this._ShiftId;
			}
			set
			{
				if ((this._ShiftId != value))
				{
					if (this._Shift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftId = value;
					this.SendPropertyChanged("ShiftId");
					this.OnShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_AccountShift", Storage="_Shift", ThisKey="ShiftId", OtherKey="Id", IsForeignKey=true)]
		public Shift Shift
		{
			get
			{
				return this._Shift.Entity;
			}
			set
			{
				Shift previousValue = this._Shift.Entity;
				if (((previousValue != value) 
							|| (this._Shift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift.Entity = null;
						previousValue.AccountShifts.Remove(this);
					}
					this._Shift.Entity = value;
					if ((value != null))
					{
						value.AccountShifts.Add(this);
						this._ShiftId = value.Id;
					}
					else
					{
						this._ShiftId = default(int);
					}
					this.SendPropertyChanged("Shift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountPeriod_AccountShift", Storage="_AccountPeriod", ThisKey="AccountPeriodId", OtherKey="Id", IsForeignKey=true)]
		public AccountPeriod AccountPeriod
		{
			get
			{
				return this._AccountPeriod.Entity;
			}
			set
			{
				AccountPeriod previousValue = this._AccountPeriod.Entity;
				if (((previousValue != value) 
							|| (this._AccountPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountPeriod.Entity = null;
						previousValue.AccountShifts.Remove(this);
					}
					this._AccountPeriod.Entity = value;
					if ((value != null))
					{
						value.AccountShifts.Add(this);
						this._AccountPeriodId = value.Id;
					}
					else
					{
						this._AccountPeriodId = default(int);
					}
					this.SendPropertyChanged("AccountPeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shifts")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private System.DateTime _BeginShift;
		
		private System.DateTime _EndShift;
		
		private EntitySet<AccountShift> _AccountShifts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBeginShiftChanging(System.DateTime value);
    partial void OnBeginShiftChanged();
    partial void OnEndShiftChanging(System.DateTime value);
    partial void OnEndShiftChanged();
    #endregion
		
		public Shift()
		{
			this._AccountShifts = new EntitySet<AccountShift>(new Action<AccountShift>(this.attach_AccountShifts), new Action<AccountShift>(this.detach_AccountShifts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginShift", DbType="DateTime NOT NULL")]
		public System.DateTime BeginShift
		{
			get
			{
				return this._BeginShift;
			}
			set
			{
				if ((this._BeginShift != value))
				{
					this.OnBeginShiftChanging(value);
					this.SendPropertyChanging();
					this._BeginShift = value;
					this.SendPropertyChanged("BeginShift");
					this.OnBeginShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndShift", DbType="DateTime NOT NULL")]
		public System.DateTime EndShift
		{
			get
			{
				return this._EndShift;
			}
			set
			{
				if ((this._EndShift != value))
				{
					this.OnEndShiftChanging(value);
					this.SendPropertyChanging();
					this._EndShift = value;
					this.SendPropertyChanged("EndShift");
					this.OnEndShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_AccountShift", Storage="_AccountShifts", ThisKey="Id", OtherKey="ShiftId")]
		public EntitySet<AccountShift> AccountShifts
		{
			get
			{
				return this._AccountShifts;
			}
			set
			{
				this._AccountShifts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountShifts(AccountShift entity)
		{
			this.SendPropertyChanging();
			entity.Shift = this;
		}
		
		private void detach_AccountShifts(AccountShift entity)
		{
			this.SendPropertyChanging();
			entity.Shift = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountPeriods")]
	public partial class AccountPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _BeginPeriod;
		
		private System.DateTime _EndPeriod;
		
		private int _WorkingDay;
		
		private int _AvailableSlot;
		
		private bool _IsBlocked;
		
		private bool _IsEnabled;
		
		private string _Title;
		
		private EntitySet<AccountShift> _AccountShifts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnBeginPeriodChanging(System.DateTime value);
    partial void OnBeginPeriodChanged();
    partial void OnEndPeriodChanging(System.DateTime value);
    partial void OnEndPeriodChanged();
    partial void OnWorkingDayChanging(int value);
    partial void OnWorkingDayChanged();
    partial void OnAvailableSlotChanging(int value);
    partial void OnAvailableSlotChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public AccountPeriod()
		{
			this._AccountShifts = new EntitySet<AccountShift>(new Action<AccountShift>(this.attach_AccountShifts), new Action<AccountShift>(this.detach_AccountShifts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginPeriod", DbType="DateTime NOT NULL")]
		public System.DateTime BeginPeriod
		{
			get
			{
				return this._BeginPeriod;
			}
			set
			{
				if ((this._BeginPeriod != value))
				{
					this.OnBeginPeriodChanging(value);
					this.SendPropertyChanging();
					this._BeginPeriod = value;
					this.SendPropertyChanged("BeginPeriod");
					this.OnBeginPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPeriod", DbType="DateTime NOT NULL")]
		public System.DateTime EndPeriod
		{
			get
			{
				return this._EndPeriod;
			}
			set
			{
				if ((this._EndPeriod != value))
				{
					this.OnEndPeriodChanging(value);
					this.SendPropertyChanging();
					this._EndPeriod = value;
					this.SendPropertyChanged("EndPeriod");
					this.OnEndPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingDay", DbType="Int NOT NULL")]
		public int WorkingDay
		{
			get
			{
				return this._WorkingDay;
			}
			set
			{
				if ((this._WorkingDay != value))
				{
					this.OnWorkingDayChanging(value);
					this.SendPropertyChanging();
					this._WorkingDay = value;
					this.SendPropertyChanged("WorkingDay");
					this.OnWorkingDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSlot", DbType="Int NOT NULL")]
		public int AvailableSlot
		{
			get
			{
				return this._AvailableSlot;
			}
			set
			{
				if ((this._AvailableSlot != value))
				{
					this.OnAvailableSlotChanging(value);
					this.SendPropertyChanging();
					this._AvailableSlot = value;
					this.SendPropertyChanged("AvailableSlot");
					this.OnAvailableSlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountPeriod_AccountShift", Storage="_AccountShifts", ThisKey="Id", OtherKey="AccountPeriodId")]
		public EntitySet<AccountShift> AccountShifts
		{
			get
			{
				return this._AccountShifts;
			}
			set
			{
				this._AccountShifts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountShifts(AccountShift entity)
		{
			this.SendPropertyChanging();
			entity.AccountPeriod = this;
		}
		
		private void detach_AccountShifts(AccountShift entity)
		{
			this.SendPropertyChanging();
			entity.AccountPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SessionHistories")]
	public partial class SessionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _Username;
		
		private string _Title;
		
		private int _AccountPeriodId;
		
		private int _TotalUser;
		
		private int _ShiftId;
		
		private System.DateTime _BeginShift;
		
		private System.DateTime _EndShift;
		
		private int _MaxSession;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAccountPeriodIdChanging(int value);
    partial void OnAccountPeriodIdChanged();
    partial void OnTotalUserChanging(int value);
    partial void OnTotalUserChanged();
    partial void OnShiftIdChanging(int value);
    partial void OnShiftIdChanged();
    partial void OnBeginShiftChanging(System.DateTime value);
    partial void OnBeginShiftChanged();
    partial void OnEndShiftChanging(System.DateTime value);
    partial void OnEndShiftChanged();
    partial void OnMaxSessionChanging(int value);
    partial void OnMaxSessionChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    #endregion
		
		public SessionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPeriodId", DbType="Int NOT NULL")]
		public int AccountPeriodId
		{
			get
			{
				return this._AccountPeriodId;
			}
			set
			{
				if ((this._AccountPeriodId != value))
				{
					this.OnAccountPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._AccountPeriodId = value;
					this.SendPropertyChanged("AccountPeriodId");
					this.OnAccountPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUser", DbType="Int NOT NULL")]
		public int TotalUser
		{
			get
			{
				return this._TotalUser;
			}
			set
			{
				if ((this._TotalUser != value))
				{
					this.OnTotalUserChanging(value);
					this.SendPropertyChanging();
					this._TotalUser = value;
					this.SendPropertyChanged("TotalUser");
					this.OnTotalUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftId", DbType="Int NOT NULL")]
		public int ShiftId
		{
			get
			{
				return this._ShiftId;
			}
			set
			{
				if ((this._ShiftId != value))
				{
					this.OnShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftId = value;
					this.SendPropertyChanged("ShiftId");
					this.OnShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginShift", DbType="DateTime NOT NULL")]
		public System.DateTime BeginShift
		{
			get
			{
				return this._BeginShift;
			}
			set
			{
				if ((this._BeginShift != value))
				{
					this.OnBeginShiftChanging(value);
					this.SendPropertyChanging();
					this._BeginShift = value;
					this.SendPropertyChanged("BeginShift");
					this.OnBeginShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndShift", DbType="DateTime NOT NULL")]
		public System.DateTime EndShift
		{
			get
			{
				return this._EndShift;
			}
			set
			{
				if ((this._EndShift != value))
				{
					this.OnEndShiftChanging(value);
					this.SendPropertyChanging();
					this._EndShift = value;
					this.SendPropertyChanged("EndShift");
					this.OnEndShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSession", DbType="Int NOT NULL")]
		public int MaxSession
		{
			get
			{
				return this._MaxSession;
			}
			set
			{
				if ((this._MaxSession != value))
				{
					this.OnMaxSessionChanging(value);
					this.SendPropertyChanging();
					this._MaxSession = value;
					this.SendPropertyChanged("MaxSession");
					this.OnMaxSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
